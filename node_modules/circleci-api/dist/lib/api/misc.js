"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("../types");
var client_1 = require("../client");
/**
 * Creates an ssh key that will be used to access the external system identified by
 * the hostname parameter for SSH key-based authentication.
 *
 * @see https://circleci.com/docs/api/v1-reference/#ssh-keys
 * @example POST - https://circleci.com/api/v1.1/project/:vcs-type/:username/:project/ssh-key
 *
 * @param token CircleCI API token
 * @param vcs Git information for project
 * @param key SSH key details to add to project
 * @param circleHost Provide custom url for CircleCI
 * @returns nothing unless error
 */
function addSSHKey(token, vcs, key, _a) {
    var circleHost = (_a === void 0 ? {} : _a).circleHost;
    var url = types_1.createVcsUrl(vcs) + "/ssh-key";
    return client_1.client(token, circleHost).post(url, key);
}
exports.addSSHKey = addSSHKey;
/**
 * Adds your Heroku API key to CircleCI
 *
 * @see https://circleci.com/docs/api/v1-reference/#ssh-keys
 * @example POST - https://circleci.com/api/v1.1/project/:vcs-type/:username/:project/ssh-key
 *
 * @param token CircleCI API token
 * @param key Heroku key to add to project
 * @param circleHost Provide custom url for CircleCI
 * @returns nothing unless error
 */
function addHerokuKey(token, key, _a) {
    var circleHost = (_a === void 0 ? {} : _a).circleHost;
    var url = types_1.API_USER + "/heroku-key";
    return client_1.client(token, circleHost).post(url, key);
}
exports.addHerokuKey = addHerokuKey;
//# sourceMappingURL=misc.js.map