"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("../types");
var client_1 = require("../client");
var util_1 = require("../util");
/**
 * Get artifacts for single project build
 *
 * @see https://circleci.com/docs/api/v1-reference/#build-artifacts
 * @example /project/:vcs-type/:username/:project/:build_num/artifacts
 *
 * @param token - CircleCI API token
 * @param buildNumber - Target build number
 * @param circleHost Provide custom url for CircleCI
 * @param vcs - Project's git information
 * @returns Promise of an array of build artifacs
 */
function getBuildArtifacts(token, buildNumber, _a) {
    var circleHost = _a.circleHost, vcs = __rest(_a, ["circleHost"]);
    var url = types_1.createVcsUrl(vcs) + "/" + buildNumber + "/artifacts";
    return client_1.client(token, circleHost).get(url);
}
exports.getBuildArtifacts = getBuildArtifacts;
/**
 * Get the latest build artifacts for a project
 *
 * @example branch - The branch you would like to look in for the latest build. Returns artifacts for latest build in entire project if omitted.
 * @example filter - Restricts which builds are returned. Set to "completed", "successful", "failed", "running"
 *
 * @see https://circleci.com/docs/api/v1-reference/#build-artifacts-latest
 * @example GET - /project/:vcs-type/:username/:project/latest/artifacts?branch=:branch&filter=:filter
 * @param token - CircleCI API token
 * @param vcs - Project's git information
 * @param options - Query parameters
 * @param circleHost Provide custom url for CircleCI
 */
function getLatestArtifacts(token, _a) {
    var vcs = _a.vcs, _b = _a.options, options = _b === void 0 ? {} : _b, circleHost = _a.circleHost;
    var branch = options.branch, filter = options.filter;
    var url = types_1.createVcsUrl(vcs) + "/latest/artifacts" + util_1.queryParams({
        branch: branch,
        filter: filter
    });
    return client_1.client(token, circleHost).get(url);
}
exports.getLatestArtifacts = getLatestArtifacts;
//# sourceMappingURL=artifacts.js.map