"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("../types");
var client_1 = require("../client");
/**
 * Provides test metadata for a build
 *
 * @see https://circleci.com/docs/api/v1-reference/#test-metadata
 * @example GET : https://circleci.com/api/v1.1/project/:vcs-type/:username/:project/:build_num/tests
 *
 * @param token CircleCI API token
 * @param buildNumber Build number to get metadata for
 * @param circleHost Provide custom url for CircleCI
 * @param vcs Git information for project
 * @returns metadata for tests
 */
function getTestMetadata(token, buildNumber, _a) {
    var circleHost = _a.circleHost, vcs = __rest(_a, ["circleHost"]);
    var url = types_1.createVcsUrl(vcs) + "/" + buildNumber + "/tests";
    return client_1.client(token, circleHost).get(url);
}
exports.getTestMetadata = getTestMetadata;
//# sourceMappingURL=metadata.js.map